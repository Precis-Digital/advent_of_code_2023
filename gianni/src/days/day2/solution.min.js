import e from"chalk";import{getRuntime as r,getFileSize as s,loadTextFile as t}from"../../utils/getters.js";import{log as a}from"../../utils/log.js";var n="day2";const d={red:12,green:13,blue:14},i=s=>{return["red","green","blue"].reduce((e,r)=>(e[r]=s[r]||0,e),{})},o=e=>{var r=!e.sets.some(r=>!Object.keys(r).every(e=>r[e]<=d[e]));e.hasEnoughCubes=r},u=e=>{var r=e.sets.reduce((r,s)=>(Object.keys(s).forEach(e=>{r[e]=Math.max(r[e]||0,s[e])}),r),{});e.minimumCubesNeeded=r};var l=(e,r)=>{if(!Array.isArray(e)||0===e.length)throw new Error("Invalid input: dataLines must be a non-empty array");let s=0,t=0;for(const n of e){var a=(e=>{var r=e.split(":"),s=r[0].split(" "),s=parseInt(s[s.length-1],10),r=r[1].split(";");const t={line:e,index:s,sets:[]};return r.forEach(e=>{e=e.trim().split(",");const s={};e.forEach(e=>{var[e,r]=e.trim().split(" ");s[r]=parseInt(e,10)}),t.sets.push(i(s))}),o(t),u(t),t})(n);a.power=a.minimumCubesNeeded.red*a.minimumCubesNeeded.green*a.minimumCubesNeeded.blue,t+=a.power,a.hasEnoughCubes&&(s+=a.index)}return{part1:s,part2:t}},[m,c]=r(t,process.cwd()+"/src/days/day2/data.txt"),[,p]=r(s,process.cwd()+"/src/days/day2/data.txt"),[y,,]=r(t,process.cwd()+"/src/days/day2/example-data.txt"),[,g]=r(s,process.cwd()+"/src/days/day2/solution.js"),[m,b]=r(l,m,!1),[,,]=(Math.round(c+p+g+b),a(`${e.blue("Day:")} ${e.green(n[n.length-1])}\n`),a(e.blue("Part-1:")+" "+e.green(m.part1)),a(`${e.blue("Part-2:")} ${e.green(m.part2)}\n`),r(l,y,!0));